names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# ..................................................................................................
# write the useful objects as CSVs
View(hs)
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
hs <- filter(hs, county=="ADAMS"|"ARAPAHOE"|"BOULDER"|"BROOMFIELD"|"DENVER"|"DOUGLAS"|"JEFFERSON")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
hs <- filter(hs, county==c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON"))
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# write the useful objects as CSVs
View(hs)
View(hs)
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
View(hs)
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# write the useful objects as CSVs
cmas <- read_excel("cmas2017.csv")
cmas <- read_excel("cmas2017.xlsx")
View(cmas)
cmas <- read_excel("cmas2017.xlsx", skip=3)
View(cmas)
cmas <- read_excel("cmas2017.xlsx", skip=4)
View(cmas)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
View(cmas)
# split into levels
cmas.state <- filter(cmas, level="STATE")
# split into levels
cmas.state <- filter(cmas, level=="STATE")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
names(cmas)
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# write the useful objects as CSVs
View(cmas.school)
cmas.school <- aggregate(cmas$proficiency, by=list(district=cmas$district, school=cmas$school,
content=cmas$content), data=cmas, FUN=mean)
View(cmas.school)
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
View(cmas.school)
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
View(cmas.school)
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
warnings()
cmas.school$proficiency <- as.numeric(cmas.school)
cmas.school$proficiency <- as.numeric(cmas.school$proficiency)
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school$proficiency <- as.numeric(cmas.school$proficiency)
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
# write the useful objects as CSVs
View(cmas.school)
cmas.school <- rename(cmas.school, "proficiency"="x")
View(cmas.school)
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
View(cmas.school)
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school$proficiency <- as.numeric(cmas.school$proficiency) # coerce proficiency to numeric class
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- rename(cmas.school, "proficiency"="x")
# write the useful objects as CSVs
# MERGE SCHOOL LIST WITH GEO INFO
geo <- read_csv("schoolgeo.csv")
# MERGE SCHOOL LIST WITH GEO INFO
geo <- read_csv("schoolgeo.csv")
View(geo)
geo <- filter(geo, setting=="Denver Metro")
View(geo)
unique(geo$county)
geo <- filter(geo, !county=="WELD")
unique(geo$county)
geo <- rename(geo, "school"="name")
school <- inner_join(geo, cmas.school, by="school")
View(school)
cmas.school <- inner_join(geo, cmas.school, by="school")
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school$proficiency <- as.numeric(cmas.school$proficiency) # coerce proficiency to numeric class
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- rename(cmas.school, "proficiency"="x")
# ..................................................................................................
# MERGE SCHOOL LIST WITH GEO INFO
# read in school geographic information
geo <- read_csv("schoolgeo.csv")
geo <- filter(geo, setting=="Denver Metro") # filter to denver metro area
geo <- filter(geo, !county=="WELD") # remove weld county to get to consistent 7
unique(geo$county)
geo <- rename(geo, "school"="name")
cmas.school <- inner_join(geo, cmas.school, by="school")
# write the useful objects as CSVs
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school$proficiency <- as.numeric(cmas.school$proficiency) # coerce proficiency to numeric class
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- rename(cmas.school, "proficiency"="x")
# ..................................................................................................
# MERGE SCHOOL LIST WITH GEO INFO
# read in school geographic information
geo <- read_csv("schoolgeo.csv")
geo <- filter(geo, setting=="Denver Metro") # filter to denver metro area
geo <- filter(geo, !county=="WELD") # remove weld county to get to consistent 7
unique(geo$county)
# rename school name variable
geo <- rename(geo, "school"="name")
# inner join CMAS and geography information
cmas.school <- inner_join(geo, cmas.school, by=c("school", "district"))
# write the useful objects as CSVs
View(hs)
## C. McClintock
## Shift Research Lab
## Summer 2018 ## Updated: May 22, 2018
## Cleaning Script: CDE Education Data
# ..................................................................................................
# set up: wd, retrieve encrypted data
rm(list=ls())
getwd()
# if need be setwd("~/../../")
setwd("R/ShiftResearchLab2018/ed-data")
# set up: libraries
library(dplyr)
library(forcats)
library(tidyverse)
library(readxl)
library(tidyr)
# ..................................................................................................
# HIGH SCHOOL GRADUATION RATES
# read in the high school graduation data
hs <- read_excel("hsgrad.xlsx")
hs <- hs[-1,] # delete the first row of Excel formulas
hs <- select(hs, `County Name`, `Organization Code`, `Organization Name`,
`School Code`, `School Name`, `\"Class Of…\" Anticpated Year of Graduation Cohort`,
`All Students Graduation Rate`)
# better names
names(hs)
names(hs) <- c("county", "distcode", "district", "schoolcode", "school", "cohort", "gradrate")
# limit to denver 7 metro
# Adams, Arapahoe, Boulder, Broomfield, Denver, Douglas, Jefferson
denvermetro <- c("ADAMS","ARAPAHOE","BOULDER","BROOMFIELD","DENVER","DOUGLAS","JEFFERSON")
hs <- filter(hs, county %in% denvermetro)
# ..................................................................................................
# READING AND MATH PROFICIENCY
# read in 2017 CMAS data
cmas <- read_excel("cmas2017.xlsx", skip=4)
# recode asterisk values as NA
cmas[cmas=="*"] <- NA
# select useful measures
cmas <- select(cmas, `Level`, `District \r\nCode`, `District \r\nName`, `School \r\nCode`,
`School \r\nName`, `Content`, `Test`, `% Met or \r\nExceeded \r\nExpectations`)
# better names
names(cmas)
names(cmas) <- c("level", "distcode", "district", "schoolcode", "school",
"content", "test", "proficiency")
# split into levels
cmas.state <- filter(cmas, cmas$level=="STATE")
cmas.district <- filter(cmas, cmas$level=="DISTRICT")
cmas.school <- filter(cmas, cmas$level=="SCHOOL")
# aggregate school proficiency by grade
cmas.school <- filter(cmas.school, !is.na(cmas.school$proficiency)) # remove observations with NA in proficiency score
cmas.school$proficiency <- as.numeric(cmas.school$proficiency) # coerce proficiency to numeric class
cmas.school <- aggregate(cmas.school$proficiency, by=list(district=cmas.school$district, school=cmas.school$school,
content=cmas.school$content), data=cmas.school, FUN=mean)
cmas.school <- rename(cmas.school, "proficiency"="x")
# ..................................................................................................
# MERGE SCHOOL LIST WITH GEO INFO
# read in school geographic information
geo <- read_csv("schoolgeo.csv")
geo <- filter(geo, setting=="Denver Metro") # filter to denver metro area
geo <- filter(geo, !county=="WELD") # remove weld county to get to consistent 7
unique(geo$county)
# rename school name variable
geo <- rename(geo, "school"="name")
# inner join CMAS and geography information
cmas.school <- inner_join(geo, cmas.school, by=c("school", "district"))
# write the useful objects as CSVs
write.csv(cmas.school, "clean.proficiency.csv")
write.csv(hs, "clean.hsgrad.csv")
